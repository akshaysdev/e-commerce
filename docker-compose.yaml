version: '3.7'

services:
  server:
    build:
      context: .
      dockerfile: server.Dockerfile
    networks:
      - e-commerce-net
    ports:
      - 8000:8000
    environment:
      - TZ=Asia/Kolkata
    container_name: server
    working_dir: /home/apps/e-commerce/
    volumes:
      - ~/Developer/projects/e-commerce:/home/apps/e-commerce
      - node_modules:/home/apps/e-commerce/node_modules
    depends_on:
      mongo_db:
        condition: service_healthy
      redis_db:
        condition: service_started
      mailcatcher:
        condition: service_started
    command: npm start

  mongo_db:
    image: mongo:5.0.8
    networks:
      - e-commerce-net
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - ~/Developer/dbs/mongo:/data/db
    command: --quiet --logpath /dev/null
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/healthcheck-database --quiet

  mailcatcher:
    image:  schickling/mailcatcher
    networks:
      - e-commerce-net
    container_name: mailcatcher
    ports:
      - 1080:1080
      - 1025:1025

  redis_db:
    image: redis:latest
    networks:
      - e-commerce-net
    container_name: redis_db
    volumes:
      - ~/Developer/dbs/redis:/data
    ports:
      - 6379:6379

networks:
  e-commerce-net:

volumes:
  node_modules:
